<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bnw.beta.domain.member.dao.MemberDAO">
<sql id="search">
    <if test="keyword != null and keyword != ''">
        <choose>
            <when test="searchType != null and searchType != ''">
                <choose>
                    <when test="'role'.equals(searchType)">
                        AND role LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="member_name'.equals(searchType)">
                        AND member_name LIKE CONCAT('%', #{keyword}, '%')
                    </when>
                    <when test="'member_id'.equals(searchType)">
                        AND member_id LIKE CONCAT('%', #{keyword}, '%')
                    </when>

                </choose>
            </when>
            <otherwise>
                AND
                (
                role LIKE CONCAT('%', #{keyword}, '%')
                OR member_name LIKE CONCAT('%', #{keyword}, '%')
                OR member_id LIKE CONCAT('%', #{keyword}, '%')
                )
            </otherwise>
        </choose>
    </if>
</sql>

    <!--약관동의-->
    <insert id="memberAgree" parameterType="MemberDTO">
        <![CDATA[
        INSERT INTO termsrecord(terms_record, member_id)
        VALUES (#{terms_record}, #{member_id})
        ]]>
    </insert>

    <!--회원가입-->
    <insert id="memberJoin" parameterType="MemberDTO">
        <![CDATA[
        INSERT INTO member (member_id, member_pw, member_name, member_birth, member_email, member_gender, member_phone, member_tell, member_agree_m, member_agree_p, member_isshow, role)
        VALUES (#{member_id}, #{member_pw}, #{member_name}, #{member_birth}, #{member_email}, #{member_gender}, #{member_phone}, #{member_tell}, #{member_agreeM}, #{member_agreeP}, 'Y',#{role})
        ]]>
    </insert>

    <!--아이디중복체크-->
    <select id="idCheck" parameterType="String" resultType="int">
        <![CDATA[
        SELECT COUNT(member_id) FROM member WHERE member_id = #{id}
        ]]>
    </select>

    <!--이메일중복체크-->
    <select id="emailCheck" parameterType="String" resultType="int">
        <![CDATA[
        SELECT COUNT(member_email) FROM member WHERE member_email = #{email}
        ]]>
    </select>

    <!--핸드폰중복체크-->
    <select id="phoneCheck" parameterType="String" resultType="int">
        <![CDATA[
        SELECT COUNT(member_phone) FROM member WHERE member_phone = #{phone}
        ]]>
    </select>

    <!--///////////member_no & member_name 불러오기 -->
    <select id="getMemberInfo" parameterType="String">
     <![CDATA[
        SELECT m.*, COUNT(p.pay_no) AS pay_count
        FROM member m
                 LEFT JOIN pay p ON m.member_id = p.member_id
        WHERE m.member_id = #{member_id}
        GROUP BY m.member_id;
        ]]>
    </select>

    <!--///////////member롤 불러오기  김현민 -->
    <select id="getRoleById" parameterType="String">
        <![CDATA[
        SELECT role
        FROM member
        WHERE member_id = #{member_id};
        ]]>
    </select>

    <!--///////////로그인된 아이디 불러오기  김현민 -->
    <select id="loginByUsername" parameterType="String">
        SELECT * FROM member WHERE member_id = #{username}
    </select>

    <!--회원 아이디 찾기-->
    <select id="findIDbyUserName" resultType="MemberDTO" >
        SELECT *
        FROM member
        WHERE member_name = #{name} AND member_email = #{email}
    </select>

    <select id="findByUserIdAndEmail" resultType="MemberDTO" >
        SELECT *
        FROM member
        WHERE member_id = #{id} AND member_email = #{email}
    </select>

    <update id="updatePassword" parameterType="map">
        UPDATE member
        SET member_pw = #{newPassword}
        WHERE member_id = #{id}
    </update>


    <!--회원 비번 찾기-->
  <!--  <select id="findPwbyUserId" resultType="MemberDTO" >
        SELECT *
        FROM member
        WHERE member_id = #{id} AND member_email = #{email}
    </select>-->


    <!--회원목록 조회 관리자용-->
    <select id="memberlist" parameterType="map" resultType="MemberDTO">
        select member_no, role, member_id, member_name, member_phone, member_email, license, join_date
        from member
        <where>
            <include refid="search"></include>
        </where>
        LIMIT #{page}, #{size};

    </select>
    <!--회원목록 카운트-->
    <select id="count" parameterType="int">
        select count(*)
        from member
        <where>
            <include refid="search"></include>
        </where>
    </select>
</mapper>