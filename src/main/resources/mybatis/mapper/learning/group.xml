<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bnw.beta.domain.learning.dao.GroupDAO">

    <!-- 그룹등록 가능한 게임콘텐츠 Cnt -->
    <select id="groupAddListCnt" resultType="int">
        <![CDATA[
        SELECT COUNT(*) FROM (
            SELECT g.*, SUM(s.group_nowcnt) AS group_nowcnt
            FROM game g
            LEFT JOIN studygroup s ON g.game_no = s.game_no
        ]]>
        <if test="game_title != null and game_title != ''">
            WHERE g.game_title = #{game_title}
        </if>
        <![CDATA[
        GROUP BY g.game_no
        HAVING SUM(s.group_nowcnt) < g.game_total OR SUM(s.group_nowcnt) IS NULL
        ) AS subquery;
        ]]>
    </select>

    <!-- 게임 콘텐츠 title 조회 -->
    <select id="selectGameTitle" resultType="GroupDTO">
        <![CDATA[
        SELECT DISTINCT game_title
        FROM game;
        ]]>
    </select>

    <!-- 그룹등록 가능한 게임콘텐츠 조회(무한 스크롤) -->
    <select id="groupAddList" parameterType="GroupDTO" resultType="GroupDTO">
        <![CDATA[
        SELECT g.*, SUM(s.group_nowcnt) AS group_nowcnt
        FROM game g
        LEFT JOIN studygroup s ON g.game_no = s.game_no
        ]]>
        <if test="game_title != null and game_title != ''">
            WHERE g.game_title = #{game_title}
        </if>
        <![CDATA[
        GROUP BY g.game_no
        HAVING SUM(s.group_nowcnt) < g.game_total OR SUM(s.group_nowcnt) IS NULL
        ORDER BY g.game_no DESC
        LIMIT #{LIMIT} OFFSET #{OFFSET};
        ]]>
    </select>

    <!-- 그룹 등록을 위한 게임 콘텐츠 정보 불러오기 -->
    <select id="gameGroupInfo" parameterType="Integer" resultType="GroupDTO">
        <![CDATA[
        SELECT g.game_no, g.game_title, g.game_total, SUM(s.group_cnt) AS group_nowcnt
        FROM game g
        JOIN studygroup s ON g.game_no = s.game_no
        WHERE g.game_no = #{game_no};
        ]]>
    </select>

    <!-- 학습 그룹 등록(상세) -->
    <insert id="insertGroup" parameterType="GroupDTO">
        INSERT INTO studygroup (game_no, group_name, member_id, group_cnt, group_startdate, group_enddate)
        VALUES (#{game_no}, #{group_name}, #{member_id}, #{group_cnt}, #{group_startdate}, #{group_enddate});
    </insert>

    <!-- 학습 그룹 조회 목록 불러오기 -->
    <select id="groupListSelect" parameterType="GroupDTO" resultType="GroupDTO">
        <![CDATA[
        SELECT sg.group_no, sg.group_name, sg.group_startdate, sg.group_enddate, sg.group_cnt, sg.group_nowcnt, g.game_title
        FROM studygroup AS sg
        JOIN game AS g ON sg.game_no = g.game_no
        WHERE
            sg.member_id = #{member_id}
        ]]>

        <if test="group_name != null and group_name != ''">
            AND sg.group_name = #{group_name}
        </if>
    </select>

    <!-- 학습 그룹 name 조회 -->
    <select id="selectGroupName" parameterType="GroupDTO" resultType="GroupDTO">
        <![CDATA[
        SELECT DISTINCT group_name
        FROM studygroup
        WHERE member_id = #{member_id}
        ]]>
    </select>

    <!-- 학습 그룹 상세 조회 -->
    <select id="selectGroupDetail" parameterType="GroupDTO" resultType="GroupDTO">
        <![CDATA[
        SELECT
        m.member_name, m.member_phone, m.member_email, m.join_date,
        g.group_name, g.group_cnt, g.group_nowcnt,
        ga.game_title
        FROM
        groupmember AS gm
        JOIN
        member AS m ON gm.member_no = m.member_no
        JOIN
        studygroup AS g ON gm.group_no = g.group_no
        JOIN
        game AS ga ON gm.game_no = ga.game_no
        WHERE
        gm.group_no = #{group_no}
        ]]>
        <if test="group_name != null and group_name != ''">
            AND g.group_name = #{group_name}
        </if>
    </select>

    <!-- 학습 그룹 삭제 -->
    <delete id="deleteGroup" parameterType="java.util.List">
        <![CDATA[
        DELETE FROM studygroup
        WHERE group_no IN
        ]]>
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item}
        </foreach>
    </delete>
</mapper>